<?xml version="1.0"?>
<project name="dbut" default="help">
    <property name="dbut.properties" value="dbut.properties"/>
    <property file="${dbut.properties}"/>

    <property name="build.dir" value="build"/>
    <property name="build.include" value="**/*.sql"/>
    <property name="build.on_error_stop" value="on"/>

	<property name="test.dir" value="test"/>
    <property name="test.include" value="**/*.sql"/>
    <property name="test.on_error_stop" value="on"/>

    <property name="db.host" value=""/>
    <property name="db.port" value=""/>
    <property name="db.user" value=""/>
    <property name="db.name" value=""/>
    <property name="db.template" value="template0"/>
    <property name="db.encoding" value="UTF8"/>
    <property name="db.locale" value="C.UTF-8"/>
    <property name="db.lc-collate" value="${db.locale}"/>
    <property name="db.lc-ctype" value="${db.locale}"/>
    <property name="db.locale-provider" value="icu"/>
    <property name="db.icu-locale" value="und-x-icu"/>

    <target name="help">
        <echo>dbut v0.2.0
DataBase Unit Tests

Targets:

help - help
clean - DROP database
build - create database and load *.sql files from build.dir
    build-db - only create database
    build-sql - only load *.sql files from build.dir
test - load test data *.sql from test.dir
</echo>
    </target>

    <macrodef name="dbut-apply-sql">
        <attribute name="onErrorStop"/>
        <attribute name="host"/>
        <attribute name="port"/>
        <attribute name="user"/>
        <attribute name="name"/>
        <attribute name="dir"/>
        <attribute name="include"/>
        <sequential>
            <apply executable="psql" failonerror="true" verbose="true">
              <arg value="--set=ON_ERROR_STOP=@{onErrorStop}"/>
              <arg value="-h"/>
              <arg value="@{host}"/>
              <arg value="-p"/>
              <arg value="@{port}"/>
              <arg value="-U"/>
              <arg value="@{user}"/>
              <arg value="-d"/>
              <arg value="@{name}"/>
              <arg value="-f"/>
              <fileset dir="@{dir}">
                <patternset>
                  <include name="@{include}"/>
                </patternset>
              </fileset>
            </apply>
        </sequential>
    </macrodef>

    <target name="clean">
      <exec executable="dropdb" failonerror="true" failifexecutionfails="true">
        <arg value="--if-exists"/>
        <arg value="-f"/>
        <arg value="-h"/>
        <arg value="${db.host}"/>
        <arg value="-p"/>
        <arg value="${db.port}"/>
        <arg value="-U"/>
        <arg value="${db.user}"/>
        <arg value="${db.name}"/>
      </exec>
    </target>
    <target name="build-db">
      <exec executable="createdb" failonerror="true">
        <arg value="-h"/>
        <arg value="${db.host}"/>
        <arg value="-p"/>
        <arg value="${db.port}"/>
        <arg value="-U"/>
        <arg value="${db.user}"/>
        <arg value="-E"/>
        <arg value="${db.encoding}"/>
        <arg value="--lc-collate=${db.lc-collate}"/>
        <arg value="--lc-ctype=${db.lc-ctype}"/>
        <arg value="--locale-provider=${db.locale-provider}"/>
        <arg value="--icu-locale=${db.icu-locale}"/>
        <arg value="--template=${db.template}"/>
        <arg value="${db.name}"/>
      </exec>
    </target>
    <target name="build-sql">
        <dbut-apply-sql
            onErrorStop="${build.on_error_stop}"
            host="${db.host}"
            port="${db.port}"
            user="${db.user}"
            name="${db.name}"
            dir="${build.dir}"
            include="${build.include}"
        />
    </target>
    <target name="build" depends="build-db,build-sql">
    </target>
    <target name="test">
        <dbut-apply-sql
            onErrorStop="${build.on_error_stop}"
            host="${db.host}"
            port="${db.port}"
            user="${db.user}"
            name="${db.name}"
            dir="${test.dir}"
            include="${test.include}"
        />
    </target>
</project>